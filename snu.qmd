---
title: "Snu"
format:
  html:
    embed-resources: true
editor: visual
---

```{r, results='asis', echo = FALSE}
a <- knitr::knit_child('snow.Rmd', quiet=T)
cat(a, sep="\n")
```

## Yu no nothin' Jon Snu

Taken shamelessly from https://emilyriederer.netlify.app/post/snow/

This gives an excellent guide for using child files.

The little code chunk above is what calls another .RMD file that contains the CSS that does all the magic.

There are two fancy files, snow and fireworks.

Simply plonk the RMD file in your folder and include the chunk above.

Do the rendering thing and ta da - snu!

---

## Bonus christmas tree

Shamelessly  ~~stolen~~ shared from https://www.datawim.com/post/making-merry-christmas-tree-in-r/


```{r, results='asis'}
if(!require(tidyverse)){
    install.packages("tidyverse", 
                     dependencies =TRUE)
    library(tidyverse)}
if(!require(mlbench)){
    install.packages("mlbench", 
                     dependencies =TRUE)
    library(mlbench)}
if(!require(viridis)){
    install.packages("viridis", 
                     dependencies =TRUE)
    library(viridis)}



#set.seed(12345)
data <- mlbench.shapes(n=100000) 

canopy <- data |>
  as.data.frame() |> 
  filter(classes == "3")

# trunk
y <- c(0.8, 1, 1, 0.8)  
x <- c(00.8, 00.8, 1.2, 1.2)

# bind columns as a data frame
trunk = as.data.frame(cbind(x, y))

ggplot() +
  geom_polygon(aes(x = x, y = y), data = trunk, fill = "brown") +
  stat_density_2d(aes(x = x.x4, y = x.V2, fill = ..level..), data = canopy, geom = "polygon") +
  scale_fill_viridis() +
  theme_void() +
  theme(legend.position = "none") +
  labs(title="Seasonal Greetings",
       subtitle = "May all your reports render!",
       caption="Simon W-M 2023")



```




## Normal Quarto Demo stuff below

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
